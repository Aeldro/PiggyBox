Index: WildPay/Controllers/GroupController.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Security.Claims;\nusing Microsoft.AspNetCore.Authorization;\nusing Microsoft.AspNetCore.Mvc;\nusing WildPay.Interfaces;\nusing WildPay.Models.Entities;\n\nnamespace WildPay.Controllers;\n\n[Authorize]\npublic class GroupController : Controller\n{\n    private readonly IGroupRepository _repository;\n    public GroupController(IGroupRepository repository)\n    {\n        _repository = repository;\n    }\n\n    // READ\n    [HttpGet]\n    public async Task<IActionResult> List()\n    {\n        var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);\n        ViewBag.UserId = userId;\n        var groups = await _repository.GetGroupsAsync(userId);\n        return View(groups);\n    }\n\n    // CREATE view\n    [HttpGet]\n    public IActionResult Add()\n    {\n        return View();\n    }\n\n    // CREATE action\n    [HttpPost]\n    public async Task<IActionResult> Add(Group group)\n    {\n        var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);\n        var userName = User.Identity.Name;\n\n        ViewBag.UserId = userId;\n        ViewBag.UserName = userName;\n        await _repository.AddGroupAsync(group.Name, group.Image, userId);\n        \n        return RedirectToAction(actionName: \"List\", controllerName: \"Group\");\n    }\n    \n    // UPDATE view\n    [HttpGet]\n    public IActionResult Edit()\n    {\n        return View();\n    }\n    \n    // UPDATE action\n    [HttpPost]\n    public async Task<IActionResult> Update(Group group)\n    {\n        await _repository.EditGroupAsync(group);\n        return RedirectToAction(actionName: \"List\", controllerName: \"Group\");\n    }\n\n    // DELETE view \n    [HttpGet]\n    public IActionResult Delete()\n    {\n        return View();\n    }\n    \n    // DELETE action \n    [HttpPost]\n    public async Task<IActionResult> Delete(int groupId)\n    {\n        await _repository.DeleteGroupAsync(groupId);\n        return RedirectToAction(actionName: \"List\", controllerName: \"Group\");\n    }\n}
===================================================================
diff --git a/WildPay/Controllers/GroupController.cs b/WildPay/Controllers/GroupController.cs
--- a/WildPay/Controllers/GroupController.cs	
+++ b/WildPay/Controllers/GroupController.cs	
@@ -24,6 +24,13 @@
         var groups = await _repository.GetGroupsAsync(userId);
         return View(groups);
     }
+    
+    //READ 
+    [HttpGet]
+    public async Task<IActionResult> GetGroupById(int id)
+    {
+        return View();
+    }
 
     // CREATE view
     [HttpGet]
