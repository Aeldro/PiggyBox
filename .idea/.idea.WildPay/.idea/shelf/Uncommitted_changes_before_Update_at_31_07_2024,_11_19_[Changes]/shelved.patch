Index: WildPay/Views/Expenditure/List.cshtml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@model WildPay.Models.Entities.Group\n@{\n    \n}\n<div>\n    <h2>@Model.Name</h2>\n    <h3>liste de dépenses</h3>\n    <table>\n        \n        @foreach (var expenditure in Model.Expenditures)\n        {\n            <tr>\n                <a asp-action=\"Edit\" asp-controller=\"Expenditure\">\n                    <td>@expenditure.Name <br/>\n                    payé par @expenditure.ApplicationUser.Firstname<td>\n                    <td>@expenditure.Amount</td>\n                </a>\n\n            </tr>\n        }\n    </table>\n\n\n</div>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/WildPay/Views/Expenditure/List.cshtml b/WildPay/Views/Expenditure/List.cshtml
--- a/WildPay/Views/Expenditure/List.cshtml	(revision 5219a7363ffef9581643ef7aca290429c31a4502)
+++ b/WildPay/Views/Expenditure/List.cshtml	(date 1722353070030)
@@ -5,8 +5,8 @@
 <div>
     <h2>@Model.Name</h2>
     <h3>liste de dépenses</h3>
+    
     <table>
-        
         @foreach (var expenditure in Model.Expenditures)
         {
             <tr>
@@ -15,7 +15,6 @@
                     payé par @expenditure.ApplicationUser.Firstname<td>
                     <td>@expenditure.Amount</td>
                 </a>
-
             </tr>
         }
     </table>
Index: WildPay/Controllers/GroupController.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Security.Claims;\nusing Microsoft.AspNetCore.Authorization;\nusing Microsoft.AspNetCore.Mvc;\nusing WildPay.Interfaces;\nusing WildPay.Models.Entities;\n\nnamespace WildPay.Controllers;\n\n[Authorize]\npublic class GroupController : Controller\n{\n    private readonly IGroupRepository _repository;\n    public GroupController(IGroupRepository repository)\n    {\n        _repository = repository;\n    }\n\n    // READ\n    [HttpGet]\n    public async Task<IActionResult> List()\n    {\n        var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);\n        ViewBag.UserId = userId;\n        var groups = await _repository.GetGroupsAsync(userId);\n        return View(groups);\n    }\n\n    // CREATE view\n    [HttpGet]\n    public IActionResult Add()\n    {\n        return View();\n    }\n\n    // CREATE action\n    [HttpPost]\n    public async Task<IActionResult> Add(Group group)\n    {\n        var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);\n        var userName = User.Identity.Name;\n\n        ViewBag.UserId = userId;\n        ViewBag.UserName = userName;\n        await _repository.AddGroupAsync(group.Name, group.Image, userId);\n        \n        return RedirectToAction(actionName: \"List\", controllerName: \"Group\");\n    }\n    \n    // UPDATE view\n    [HttpGet]\n    public IActionResult Edit()\n    {\n        return View();\n    }\n    \n    // UPDATE action\n    [HttpPost]\n    public async Task<IActionResult> Update(Group group)\n    {\n        await _repository.EditGroupAsync(group);\n        return RedirectToAction(actionName: \"List\", controllerName: \"Group\");\n    }\n\n    // DELETE view \n    [HttpGet]\n    public IActionResult Delete()\n    {\n        return View();\n    }\n    \n    // DELETE action \n    [HttpPost]\n    public async Task<IActionResult> Delete(int groupId)\n    {\n        await _repository.DeleteGroupAsync(groupId);\n        return RedirectToAction(actionName: \"List\", controllerName: \"Group\");\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/WildPay/Controllers/GroupController.cs b/WildPay/Controllers/GroupController.cs
--- a/WildPay/Controllers/GroupController.cs	(revision 5219a7363ffef9581643ef7aca290429c31a4502)
+++ b/WildPay/Controllers/GroupController.cs	(date 1722417589345)
@@ -48,8 +48,9 @@
     
     // UPDATE view
     [HttpGet]
-    public IActionResult Edit()
+    public IActionResult Update(int idGroup)
     {
+        
         return View();
     }
     
