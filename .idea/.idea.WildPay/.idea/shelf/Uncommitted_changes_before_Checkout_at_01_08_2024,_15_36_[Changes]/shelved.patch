Index: WildPay/Repositories/ExpenditureRepository.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Microsoft.EntityFrameworkCore;\nusing WildPay.Data;\nusing WildPay.Interfaces;\nusing WildPay.Models.Entities;\n\nnamespace WildPay.Repositories\n{\n    public class ExpenditureRepository : IExpenditureRepository\n    {\n        private readonly WildPayDbContext _context;\n\n        public ExpenditureRepository(WildPayDbContext context)\n        {\n            _context = context;\n        }\n        \n        public async Task<AddExpenditureAsync>()\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/WildPay/Repositories/ExpenditureRepository.cs b/WildPay/Repositories/ExpenditureRepository.cs
--- a/WildPay/Repositories/ExpenditureRepository.cs	
+++ b/WildPay/Repositories/ExpenditureRepository.cs	
@@ -13,8 +13,30 @@
         {
             _context = context;
         }
-        
-        public async Task<AddExpenditureAsync>()
+
+        public Task<List<Expenditure>> GetExpendituresAsync(string groupId)
+        {
+            throw new NotImplementedException();
+        }
 
+        public Task<Expenditure?> GetExpenditureByIdAsync(int expenditureId)
+        {
+            throw new NotImplementedException();
+        }
+
+        public Task EditExpenditureAsync(Expenditure expenditure)
+        {
+            throw new NotImplementedException();
+        }
+
+        public Task AddExpenditureAsync(string name, double amount, DateTime date, string? payerId, int? categoryId, int? groupId)
+        {
+            throw new NotImplementedException();
+        }
+
+        public Task<bool> DeleteExpenditureAsync(int expenditureId)
+        {
+            throw new NotImplementedException();
+        }
     }
 }
Index: WildPay/Interfaces/IExpenditureRepository.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using WildPay.Models.Entities;\n\nnamespace WildPay.Interfaces\n{\n    public interface IExpenditureRepository\n    {\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/WildPay/Interfaces/IExpenditureRepository.cs b/WildPay/Interfaces/IExpenditureRepository.cs
--- a/WildPay/Interfaces/IExpenditureRepository.cs	
+++ b/WildPay/Interfaces/IExpenditureRepository.cs	
@@ -4,5 +4,10 @@
 {
     public interface IExpenditureRepository
     {
+        Task<List<Expenditure>> GetExpendituresAsync(string groupId);
+        Task<Expenditure?> GetExpenditureByIdAsync(int expenditureId);
+        Task EditExpenditureAsync(Expenditure expenditure);
+        Task AddExpenditureAsync(string name, double amount, DateTime date, string? payerId, int? categoryId, int? groupId);
+        Task<bool> DeleteExpenditureAsync(int expenditureId);
     }
 }
