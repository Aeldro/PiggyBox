@using WildPay.Models
@using WildPay.Models.Entities
@model GroupBalance

@{
    ViewData["Title"] = "Soldes " + Model.Group.Name;

    ViewData["ReturnPageAction"] = "ListMyGroups";
    ViewData["ReturnPageController"] = "Group";

    // function that calculates the filling percent for each progress bar
    double PercentFillCalculation(double contribution, double totalContribution)
    {
        if (totalContribution == 0) return 0;

        if (contribution < 0) contribution = Math.Abs(contribution);

        return Math.Round(contribution / totalContribution * 100, 2);
    }
}

<svg xmlns="http://www.w3.org/2000/svg" class="d-none">
    <symbol id="check-circle-fill" viewBox="0 0 16 16">
        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
    </symbol>
    <symbol id="exclamation-triangle-fill" viewBox="0 0 16 16">
        <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
    </symbol>
</svg>

<div>
    <partial name="_GroupTitlePartial" model="Model.Group" />
    <hr />
    <div class="row">
        <partial name="_GroupNavBarPartial" model="Model.Group" />
        <div class="col-md-9">
            <section>
                <h3>
                    Total des dépenses :
                    <b class="text-warning">@Math.Round(Model.TotalAmount, 2).ToString("F2")€</b>
                </h3>

                <div class="card">
                    <h5 class="card-header">Soldes :</h5>

                    @foreach (KeyValuePair<ApplicationUser, double> member in Model.UsersBalance)
                    {
                        <div class="card-body border-success">
                            <h5 class="card-text">
                                @if(member.Key.ImageUrl != null)
                                {
                                    <img src="@member.Key.ImageUrl" alt="photo de profil" class="small-profile-image" />
                                }
                                else
                                {
                                    <img src="~/images/user_image.png" alt="photo de profil" class="small-profile-image" />
                                }
                                @member.Key.Firstname @member.Key.Lastname</h5>
                            <h5 class="card-title">@Math.Round(member.Value, 2).ToString("F2")€</h5>

                            <div class="progress">
                                @if (member.Value >= 0)
                                {
                                    <div class="progress-bar progress-bar-striped bg-success" role="progressbar" style="width: @PercentFillCalculation(member.Value, Model.TotalAmount).ToString().Replace(',','.')%" aria-valuemin="0" aria-valuemax="100"></div>
                                }
                                else
                                {
                                    <div class="progress-bar progress-bar-striped bg-danger" role="progressbar" style="width: @PercentFillCalculation(member.Value, Model.TotalAmount).ToString().Replace(',','.')%" aria-valuemin="0" aria-valuemax="100"></div>
                                }
                            </div>
                        </div>
                    }

                    <div class="card">
                        <h5 class="card-header">Remboursements à effectuer :</h5>
                        <div class="card-body">
                            @if (Model.Message == "Attention ! Les dépenses qui n'ont pas de payeur ou de contributeurs n'ont pas été prises compte.")
                            {
                                <div class="alert alert-danger alert-flexbox" role="alert">
                                    <svg class="bi flex-shrink-0 me-2 alert-resize" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill" /></svg>
                                    
                                    <div class="alert-padding">
                                        <p class="card-text">@Model.Message</p>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-success alert-flexbox" role="alert">
                                    <svg class="bi flex-shrink-0 me-2 alert-resize" role="img" aria-label="Success:"><use xlink:href="#check-circle-fill" /></svg>
                                    <div class="alert-padding">
                                        <p class="card-text">@Model.Message</p>
                                    </div>
                                </div>
                            }
                        </div>

                        @foreach (Debt debt in Model.Debts)
                        {
                            <div class="card-body">
                                <h5 class="card-title">
                                    <span class="text-danger">@debt.Debtor.Firstname @debt.Debtor.Lastname</span>
                                    doit
                                    <span class="text-info">@Math.Round(debt.Amount, 2)€</span>
                                    à
                                    <span class="text-success">@debt.Creditor.Firstname @debt.Creditor.Lastname</span>
                                </h5>
                            </div>
                        }
                    </div>
                </div>
            </section>
        </div>
    </div>
</div>